

{
    "files.defaultLanguage": "c++", // ctrl+N新建文件后默认的语言
    "editor.formatOnType": true, // 输入分号(C/C++的语句结束标识)后自动格式化当前这一行的代码
    "editor.suggest.snippetsPreventQuickSuggestions": false, // clangd的snippets有很多的跳转点，不用这个就必须手动触发Intellisense了
    "editor.acceptSuggestionOnEnter": "off", // 我个人的习惯，按回车时一定是真正的换行，只有tab才会接受Intellisense
    // "editor.snippetSuggestions": "top", // （可选）snippets显示在补全列表顶端，默认是inline

    "code-runner.runInTerminal": true, // 设置成false会在“输出”中输出，无法输入
    "code-runner.executorMap": {
        "c": "cd $dir && gcc '$fileName' -o '$fileNameWithoutExt' -Wall -g -O2 -static-libgcc -std=c11 -fexec-charset=GBK && &'$dir$fileNameWithoutExt'",
        /*Linux 环境下运行命令不同*/
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt -Wall -g -O2 -static-libgcc -std=c++17 -fexec-charset=GBK  && $dir$fileNameWithoutExt "
        // "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt.exe -Wall -g -O2 -static-libgcc -std=c11 -fexec-charset=GBK && $dir$fileNameWithoutExt",
        // "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt.exe -Wall -g -O2 -static-libgcc -std=c++17 -fexec-charset=GBK && $dir$fileNameWithoutExt"
    }, // 右键run code时运行的命令；未注释的仅适用于PowerShell（Win10默认），文件名中有空格也可以编译运行；注释掉的适用于cmd（win7默认），PS和bash也能用，但文件名中有空格时无法运行
    "code-runner.saveFileBeforeRun": true, // run code前保存
    "code-runner.preserveFocus": true, // 若为false，run code后光标会聚焦到终端上。如果需要频繁输入数据可设为false
    "code-runner.clearPreviousOutput": false, // 每次run code前清空属于code runner的终端消息，默认false
    "code-runner.ignoreSelection": true, // 默认为false，效果是鼠标选中一块代码后可以单独执行，但C是编译型语言，不适合这样用

    "C_Cpp.clang_format_sortIncludes": true, // 格式化时调整include的顺序（按字母排序）

    //以下为后续添加
    //"workbench.colorTheme": "One Dark Pro", // 主题
    "files.trimTrailingWhitespace": true, // 保存时，删除每一行末尾的空格
    //"editor.fontFamily": "等距更纱黑体 SC", // 控制编辑器字体
    //"editor.fontSize": 16, // 同上
    //"editor.fontLigatures": true, // 连体字，效果不太好形容，见 https://typeof.net/Iosevka 最后一部分
    "files.insertFinalNewline": true, // 保存后文件最末尾加一整行空行，Linux下的习惯
    "files.autoGuessEncoding": false, // 启用后，会在打开文件时尝试猜测字符集编码。我关闭的理由见6，默认也是禁用的
    "workbench.colorCustomizations": {
        //"activityBar.foreground": "#39C5BB" // 自定义颜色；想定义其它位置参见官方文档
},
"cmake.configureOnOpen": false,

}


//需要插件 CodeRunner   C/C++   OneDarkPro
//想让VSCode变得半透明的可安装插件Windows opacity，安装完成后，可能会有默认的透明度，
//如果想修改可点击 文件(File)->首选项(Preferences)->设置(Settings),在搜索框搜索winopacity.opacity这个参数。


//想要中文版可安装插件Chinese (Simplified) Language Pack for Visual Studio Code。
//ctrl + shift + p 打开命令列表    config 筛选命令      选择显示语言 zh-cn
// Ctrl + Shift + B     编译
// Alt + Shift + F      格式化代码    ubuntu下为 ctrl + shift + i
// F5                   编译并调试，执行到断点处
// Ctrl + N             新建文件
// F10                  单步
// F9                   设置/取消 断点
//Ctrl + '+'            放大字体
//ctrl + \              打开一个新的编辑窗口
